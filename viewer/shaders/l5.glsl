
uniform vec2 screenSize;
uniform Image h;

vec4 effect(vec4 color, Image tex, vec2 texture_coords, vec2 screen_coords)
{
    vec2 sc = mod(screen_coords, screenSize);
    int ig = 16; // # of input channel groups
    vec2 is = vec2(screenSize.x * ig, screenSize.y); // input size
    vec2 o = vec2(screenSize.x, 0.0); // offset

	vec4 h0 = Texel(h, (sc + o * 0.0) / is);
	vec4 h1 = Texel(h, (sc + o * 1.0) / is);
	vec4 h2 = Texel(h, (sc + o * 2.0) / is);
	vec4 h3 = Texel(h, (sc + o * 3.0) / is);
	vec4 h4 = Texel(h, (sc + o * 4.0) / is);
	vec4 h5 = Texel(h, (sc + o * 5.0) / is);
	vec4 h6 = Texel(h, (sc + o * 6.0) / is);
	vec4 h7 = Texel(h, (sc + o * 7.0) / is);
	vec4 h8 = Texel(h, (sc + o * 8.0) / is);
	vec4 h9 = Texel(h, (sc + o * 9.0) / is);
	vec4 h10 = Texel(h, (sc + o * 10.0) / is);
	vec4 h11 = Texel(h, (sc + o * 11.0) / is);
	vec4 h12 = Texel(h, (sc + o * 12.0) / is);
	vec4 h13 = Texel(h, (sc + o * 13.0) / is);
	vec4 h14 = Texel(h, (sc + o * 14.0) / is);
	vec4 h15 = Texel(h, (sc + o * 15.0) / is);

    int channelGroup = int(screen_coords.x / screenSize.x);
    if (channelGroup == 0) {
		float c0 = h0[0]*(-0.10950090)+h0[1]*(0.10485201)+h0[2]*(0.09670057)+h0[3]*(-0.06215299)+h1[0]*(-0.03962636)+h1[1]*(0.00570248)+h1[2]*(0.01091158)+h1[3]*(0.07046193)+h2[0]*(0.04456290)+h2[1]*(0.09209531)+h2[2]*(-0.00820985)+h2[3]*(-0.02347886)+h3[0]*(0.10318618)+h3[1]*(0.05033818)+h3[2]*(-0.02712919)+h3[3]*(-0.01051193)+h4[0]*(-0.10205242)+h4[1]*(0.10726175)+h4[2]*(0.06051762)+h4[3]*(0.05163868)+h5[0]*(0.00885065)+h5[1]*(-0.01504901)+h5[2]*(0.00129797)+h5[3]*(0.07701238)+h6[0]*(-0.04290012)+h6[1]*(-0.04469920)+h6[2]*(0.10072509)+h6[3]*(-0.05450905)+h7[0]*(-0.06706776)+h7[1]*(-0.09230618)+h7[2]*(0.02207224)+h7[3]*(-0.07467749)+h8[0]*(-0.01579842)+h8[1]*(-0.04073812)+h8[2]*(-0.01602007)+h8[3]*(-0.07125474)+h9[0]*(-0.10758850)+h9[1]*(-0.04064914)+h9[2]*(-0.03448395)+h9[3]*(0.06144119)+h10[0]*(0.02174459)+h10[1]*(-0.05783464)+h10[2]*(0.03788840)+h10[3]*(0.09632535)+h11[0]*(-0.00489754)+h11[1]*(0.06436381)+h11[2]*(-0.03701383)+h11[3]*(0.01101662)+h12[0]*(0.00782258)+h12[1]*(-0.04579884)+h12[2]*(0.10374758)+h12[3]*(-0.03712143)+h13[0]*(-0.01243195)+h13[1]*(-0.03449241)+h13[2]*(-0.08345475)+h13[3]*(-0.09012468)+h14[0]*(-0.01726113)+h14[1]*(0.11288017)+h14[2]*(0.01795773)+h14[3]*(-0.01861430)+h15[0]*(0.09200230)+h15[1]*(0.06813707)+h15[2]*(-0.05612719)+h15[3]*(0.06670369)+(0.09334649);
		float c1 = h0[0]*(0.10265744)+h0[1]*(0.04895473)+h0[2]*(-0.04449074)+h0[3]*(0.04201208)+h1[0]*(0.02780467)+h1[1]*(0.04554397)+h1[2]*(0.09793074)+h1[3]*(0.10407981)+h2[0]*(0.01660799)+h2[1]*(-0.05701280)+h2[2]*(0.08829071)+h2[3]*(-0.01178125)+h3[0]*(-0.06932031)+h3[1]*(-0.09840168)+h3[2]*(0.03151244)+h3[3]*(-0.05766246)+h4[0]*(-0.07413554)+h4[1]*(0.00085037)+h4[2]*(-0.09742240)+h4[3]*(-0.08411235)+h5[0]*(-0.05519895)+h5[1]*(-0.10865366)+h5[2]*(-0.05499084)+h5[3]*(0.03082361)+h6[0]*(-0.07842289)+h6[1]*(0.07721318)+h6[2]*(0.09548083)+h6[3]*(0.09146915)+h7[0]*(-0.08819535)+h7[1]*(-0.03206502)+h7[2]*(0.02843411)+h7[3]*(-0.09168559)+h8[0]*(0.00608414)+h8[1]*(0.01294337)+h8[2]*(-0.02815388)+h8[3]*(0.05093284)+h9[0]*(0.04042885)+h9[1]*(0.10960286)+h9[2]*(0.01669946)+h9[3]*(-0.08975169)+h10[0]*(0.04408663)+h10[1]*(-0.05968284)+h10[2]*(0.10916136)+h10[3]*(-0.09427300)+h11[0]*(0.06112026)+h11[1]*(0.05977713)+h11[2]*(0.04761124)+h11[3]*(-0.04767206)+h12[0]*(-0.02119273)+h12[1]*(0.11573017)+h12[2]*(0.02317063)+h12[3]*(0.06580175)+h13[0]*(0.00469918)+h13[1]*(0.09397773)+h13[2]*(0.06883715)+h13[3]*(-0.11307365)+h14[0]*(-0.00016337)+h14[1]*(-0.06720936)+h14[2]*(0.04085496)+h14[3]*(0.03266960)+h15[0]*(-0.10130990)+h15[1]*(0.06295428)+h15[2]*(0.05846439)+h15[3]*(0.06891682)+(-0.04085184);
		float c2 = h0[0]*(-0.09022043)+h0[1]*(-0.08542542)+h0[2]*(0.03926436)+h0[3]*(-0.01940998)+h1[0]*(-0.07696909)+h1[1]*(-0.08235344)+h1[2]*(-0.09625743)+h1[3]*(0.00483196)+h2[0]*(0.04166097)+h2[1]*(0.07993492)+h2[2]*(-0.10560381)+h2[3]*(0.07047848)+h3[0]*(0.00898885)+h3[1]*(0.10980295)+h3[2]*(-0.08647734)+h3[3]*(-0.04653896)+h4[0]*(-0.11420775)+h4[1]*(-0.01200839)+h4[2]*(0.04388826)+h4[3]*(-0.05155981)+h5[0]*(0.05828586)+h5[1]*(0.07719351)+h5[2]*(0.07252526)+h5[3]*(-0.03049149)+h6[0]*(-0.00339763)+h6[1]*(0.05049773)+h6[2]*(-0.11577027)+h6[3]*(-0.06146992)+h7[0]*(0.06630771)+h7[1]*(-0.10358923)+h7[2]*(-0.08219463)+h7[3]*(0.00985279)+h8[0]*(0.08145672)+h8[1]*(-0.03080173)+h8[2]*(-0.10523228)+h8[3]*(-0.03352108)+h9[0]*(-0.02211560)+h9[1]*(-0.07867993)+h9[2]*(-0.09216279)+h9[3]*(-0.03806764)+h10[0]*(0.07009030)+h10[1]*(0.11046796)+h10[2]*(0.09155341)+h10[3]*(0.09927514)+h11[0]*(0.02481397)+h11[1]*(0.10373368)+h11[2]*(0.08866356)+h11[3]*(-0.05630298)+h12[0]*(-0.03735123)+h12[1]*(0.09216086)+h12[2]*(-0.02192705)+h12[3]*(-0.03996348)+h13[0]*(0.00876720)+h13[1]*(0.02508383)+h13[2]*(0.00072009)+h13[3]*(-0.09816003)+h14[0]*(-0.11293680)+h14[1]*(-0.03372734)+h14[2]*(-0.06986540)+h14[3]*(0.02835256)+h15[0]*(0.10212991)+h15[1]*(-0.11439831)+h15[2]*(-0.10790740)+h15[3]*(0.02049360)+(-0.02825125);
		float c3 = 1.0;
		return clamp(vec4(c0, c1, c2, c3), 0.0, 1.0);
    }
}
